plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.foodcourt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.named('jacocoTestReport') {
	dependsOn tasks.named('test')
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
	}

	def excludes = [
			'**/dto/**',
			'**/configuration/**',
			'**/exception/**',
			'**/constants/**',
			'**/annotations/**',
			'**/*MapperImpl.*',
			'**/MainApplication.*'
	]
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: excludes)
	}))
}